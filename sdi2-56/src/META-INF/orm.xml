<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings 
	xmlns="http://java.sun.com/xml/ns/persistence/orm" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
  	version="2.0">
  	
  	<!-- Queries de usuarios --> 
  	<named-query name="User.findAll">
		<query>select u from User u</query>
	</named-query>
  	
	<named-query name="User.findByLogin">
		<query>
			select u 
			from User u 
			where u.login = (?1)
		</query>
	</named-query>
	
	<!-- Queries de tareas -->
	<named-query name="Task.findAll">
		<query>select t from Task t</query>
	</named-query>
	
	<named-query name="Task.findByLogin">
		<query>
			select t 
			from Task t
			where t.user.login = (?1)
			and t.finished = null
			order by t.planned asc
		</query>
	</named-query>
	
	<named-query name="Task.findInbox">
		<query>
			select t 
			from Task t 
			where t.user.id = (?1)
			and t.category.id is null
			and t.finished is null
			order by t.planned asc
		</query>
	</named-query>
	
	<named-query name="Task.findFinished">
		<query>
			select t 
			from Task t 
			where t.user.id = (?1)
			and t.finished is not null
			order by t.planned asc
		</query>
	</named-query>
	
	<named-query name="Task.findBetween">
		<query>
			select t 
			from Task t 
			where t.user.id = (?1) 
			and t.planned between (?2) and (?3)
			and t.finished is null
			order by t.planned asc
		</query>
	</named-query>
	
	<named-query name="Task.findByUser_Category">
		<query>
			select t 
			from Task t
			where t.user.id = (?1) 
			and t.category.id = (?2)
			and t.finished is null
			order by t.planned asc
		</query>
	</named-query>
	
	<named-query name="Task.findByUser_CreatedDate">
		<query>
			select t 
			from Task t
			where t.user.id = (?1)
			and t.created = (?3)
		</query>
	</named-query>
	
	<!-- Queries de CategorÃ­as --> 
	<named-query name="Category.findAll">
		<query>select c from Category c</query>
	</named-query>
	
	<named-query name="Category.findByUserAndName">
		<query>
			select c 
			from Category c 
			where c.user.id = (?1) and c.name = (?2)
		</query>
	</named-query>
	
	<named-query name="Category.findById">
		<query>
			select c 
			from Category c 
			where c.id = (?1)
		</query>
	</named-query>
	
	<named-query name="Category.findByUser">
		<query>
			select c 
			from Category c 
			where c.user.login = (?1)
		</query>
	</named-query>
	
</entity-mappings>